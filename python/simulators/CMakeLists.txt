pybind11_add_module(simulators simulators.cpp)

set_target_properties( simulators PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${PROJECT_BINARY_DIR}/python/simulators )
#set_target_properties( flowmainebos PROPERTIES INCLUDE_DIRECTORIES ${OPM_INCLUDE_DIRS} )
#target_compile_definitions ( flowmainebos PRIVATE ${OPM_DEFINITIONS} )

# The cmake config files generated by opm-common are generated in a non standard
# way and they are not fully relocatable. This creates problems when we are
# building sunbeam towards a opm-common distribution which has been installed
# using the DESTDIR option in make install.
#
# If we subsequently configure sunbeam as:
#
# bash% cmake .. -DDEST_PREFIX=/path/to/DESTDIR
#
# There is an extreme scotch-tape-and-chewing-gum solution which just barely
# works:
#
#  1. When evaluating opm-common-config.cmake the DEST_PREFIX variable is
#     detected and the paths are manually prefixed with DEST_PREFIX.
#
#  2. Here we link explicitly to the dependenencies of opm-common; i.e. ecl and
#     three boost libraries insteady linking transitively through the
#     ${opm-common_LIBRARIES} variable.
#
# See also the file cmake/Templates/opm-project-config.cmake.in in the
# opm-common distribution which this hack depends on.

#if (DEST_PREFIX)
#  find_package(ecl)
#  find_package(Boost REQUIRED COMPONENTS filesystem regex)
#  target_link_libraries(flowmainebos PRIVATE ompsimulators)
#  target_link_libraries(libsunbeam PRIVATE ${Boost_LIBRARIES})
#  target_link_libraries(flowmainebos PRIVATE opmcommon)
#else()
#  target_link_libraries( libsunbeam PRIVATE opmcommon )
#endif()
target_sources(simulators
  PRIVATE
    ../../flow/flow_ebos_blackoil.cpp
    ../../flow/flow_ebos_gasoil.cpp
    ../../flow/flow_ebos_oilwater.cpp
    ../../flow/flow_ebos_polymer.cpp
    ../../flow/flow_ebos_solvent.cpp
    ../../flow/flow_ebos_energy.cpp
    ../../flow/flow_ebos_oilwater_polymer.cpp
    ../../flow/flow_ebos_oilwater_polymer_injectivity.cpp)

target_link_libraries( simulators PRIVATE opmsimulators )

install(TARGETS simulators DESTINATION ${PYTHON_INSTALL_PREFIX}/simulators)
